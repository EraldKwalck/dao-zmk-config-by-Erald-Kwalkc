/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    chosen {
        // zmk,matrix_transform = &default_transform;

        zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&to 4              &kp GRAVE  &kp Q  &kp W        &kp E           &kp R          &mt GRAVE T            &kp Y                &kp U              &kp I    &kp O     &kp P          &kp LBKT  &mt RWIN RBKT
&kp LCTRL          &kp A      &kp S  &kp D        &kp F           &kp G          &kp H                  &kp J                &kp K              &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT LS(LALT)  &kp Z      &kp X  &kp C        &kp V           &kp B          &kp N                  &mt RIGHT_BRACKET M  &kp COMMA          &kp DOT  &kp FSLH  &mt RALT BSLH
                                     &lt RSE TAB  &mt LSHFT LWIN  &lt LWR SPACE  &lt LWR LC(BACKSPACE)  &mt RSHFT ENTER      &lt RSE BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&kp ESC         &kp F1    &kp F2  &kp F3       &kp F4    &kp F5     &kp F6     &kp F7    &kp F8           &kp F9    &kp F10   &kp F11          &kp F12  &mt RGUI UNDER
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH     &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR         &kp LPAR  &kp RPAR  &mt LCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6     &kp N7    &kp N8           &kp N9    &kp N0    &trans
                                  &lt ADJ TAB  &trans    &trans     &trans     &trans    &lt ADJ PAGE_UP
            >;
        };

        raise_layer {
            bindings = <
&trans           &kp KP_NUM       &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9      &kp KP_MINUS           &kp C_VOL_UP   &kp LC(EQUAL)  &kp PSCRN  &kp PG_UP        &kp SLCK         &kp CAPS  &trans
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4     &kp KP_N5  &kp KP_N6  &kp KP_PLUS    &kp C_MUTE             &kp LC(MINUS)  &kp UP         &kp PG_DN  &kp INS          &mt RCTRL K_APP
&trans           &kp KP_N0        &kp KP_N1     &kp KP_N2  &kp KP_N3  &kp KP_DOT     &kp C_VOL_DN           &kp LEFT       &kp DOWN       &kp RIGHT  &kp PAUSE_BREAK  &trans
                                                &trans     &trans     &lt ADJ SPACE  &lt ADJ LC(BACKSPACE)  &trans         &trans
            >;
        };

        adjust_layer {
            bindings = <
&sys_reset  &bootloader   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none       &bootloader  &sys_reset
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none       &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none
                                        &trans        &none         &trans        &trans        &none         &trans
            >;
        };

        game_layer {
            bindings = <
&to 0     &kp ESC    &kp TAB  &kp Q      &kp W      &kp E      &kp R   &kp N7  &kp N8  &kp N9    &trans    &trans     &trans  &trans
&kp LWIN  &kp LSHFT  &kp A    &kp S      &kp D      &kp F      &kp N4  &kp N5  &kp N6  &trans    &kp UP    &kp RIGHT
&tog 0    &kp LCTRL  &kp Z    &kp X      &kp C      &kp V      &kp N1  &kp N2  &kp N3  &kp LEFT  &kp DOWN  &trans
                              &kp LCTRL  &kp LSHFT  &kp SPACE  &trans  &kp N0  &trans
            >;
        };
    };
};
